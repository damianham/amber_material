import React from 'react';
import { HashRouter } from 'react-router-dom';
import {render, fireEvent, cleanup, waitForElement} from 'react-testing-library';
import renderer from 'react-test-renderer';
import 'jest-dom/extend-expect';
import jquery from 'jquery';

import { store } from '../../../lib/js/store'

import { {{class_name}}View } from '../js/{{name}}_view';

import { {{name | pluralize}}_data } from '../__fixtures__/{{name}}_fixtures';

beforeEach(() => jest.resetModules());

afterEach(cleanup);

it.skip("renders the {{class_name}}View", () => {
  const {{name}} = {{name | pluralize}}_data[0];

  const component = renderer.create(<HashRouter>
    <{{class_name}}View location={ {
        state: {
          {{name}}: {{name}}
        }
      }
    } match={ {params: {id: {{name}}.id }}} />
   </HashRouter>
  );

  let tree = component.toJSON();
  expect(tree).toMatchSnapshot();
})

it("{{class_name}}IndexItem renders each field", () => {
  const {{name}} = {{name | pluralize}}_data[0];

  const {getAllByTitle, container, asFragment} = render(
    <HashRouter>
      <{{class_name}}View location={ {
          state: {
            {{name}}: {{name}}
          }
        }
      } match={ {params: {id: {{name}}.id }}} />
   </HashRouter>
  );

  {% for field in visible_fields -%}
  {% if field.name != "user" -%}
  expect(getAllByTitle("{{name}}-{{field.name}}")).not.toBeNull()
  {% endif -%}
  {% endfor %}
})

