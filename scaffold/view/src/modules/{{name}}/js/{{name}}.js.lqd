import React from 'react';
import Resource from '../../../lib/js/resource';

export * from "./{{name}}_edit";
export * from "./{{name}}_index";
export * from "./{{name}}_new";
export * from "./{{name}}_view";

export class {{class_name}} extends Resource {
  constructor( attributes) {
    super("/{{name | pluralize}}", attributes);

  }

  // client side validation
  save() {
    let errors = [];

    {% for field in visible_fields -%}
    {% if field.name != "user" -%}
    {% if field.type == "reference" -%}
    if (this.{{field.name}}_id === '') {
    {% else -%}
    if (this.{{field.name}} === '') {
    {% endif -%}
      errors.push({field: "{{field.name}}", value: this.{{field.name}}, message: "is required"})
    }
    {% endif -%}
    {% endfor -%}

    if (errors.length > 0) {
      return new Promise(function(resolve, reject) {
        reject({
          statusText: "Could not save {{name}}",
          responseJSON: {
            error: "Validation failed. [" + erros.map((err) => {
              return `Amber::Validators:Error(@param="${err.field}", @value="${err.value}", @message="Field ${err.field} ${err.message}" )`
            }).join(', ') + "]"
          }
        })
      })
    }
    return super.save()
  }

}
