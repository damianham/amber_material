/* eslint-disable no-trailing-spaces */
import React from 'react'
import { Link } from 'react-router-dom'
import PropTypes from 'prop-types'

import {EventBus} from '../../../lib/js/eventBus'
import {store} from '../../../lib/js/store'

import { {{class_name}} } from './{{name}}'
import {{class_name}}Form from './{{name}}_form'

export class {{class_name}}New extends React.Component {
  constructor (props) {
    super(props)

    this.state = new {{class_name}}({
      {% for field in visible_fields -%}
    {% if field.name != "user" -%}
    {% if field.type == "reference" -%}
    {{"  "}}{{field.name}}_id: '',
    {% else -%}
{{"      "}}{{field.name}}: '',
    {% endif -%}
    {% endif -%}
    {% endfor %}
    })
  }

  onBack() {
    this.props.history.goBack()
  }

  onChange(event) {
    this.setState({ [event.target.name]: event.target.value })
    EventBus.emit('field:changed:{{name}}', event.target.name)
  }

  onSubmit(event) {
    event.preventDefault();
    let {{name}} = new {{class_name}}(this.state)
    {{name}}.save().then(this.onBack.bind(this))
    .catch((response, statusText, error) => {
      store.handleErrors('Add', '{{name}}', error || response.message, response.responseJSON)
    });
  }

  render() {
    return (
      <div>
        <div className="btn btn-primary btn-xs {{name}}-new-back-button new-back-button"
          onClick={this.onBack.bind(this)}
        >
          Back
        </div>
        <{{class_name}}Form {{name}}={this.state}
          onSubmit={this.onSubmit.bind(this)}
          onChange={this.onChange.bind(this)}/>
      </div>
    )
  }
}

{{class_name}}New.proptypes = {
  location: PropTypes.object.isRequired,
  history: PropTypes.object.isRequired
}
